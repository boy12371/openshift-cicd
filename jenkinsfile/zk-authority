node {
    // define value
    def branchName    = System.currentTimeMillis()
    env.JAVA_HOME = "${tool 'JDK8'}"

    stage('Checkout svn') {
      checkout([$class: 'SubversionSCM',
        additionalCredentials: [],
        excludedCommitMessages: '',
        excludedRegions: '',
        excludedRevprop: '',
        excludedUsers: 'buildbot',
        filterChangelog: false,
        ignoreDirPropChanges: false,
        includedRegions: '',
        locations: [[credentialsId: '844cbc39-0037-4e97-a1d2-b371a70cfd9c',
            depthOption: 'infinity',
            ignoreExternalsOption: true,
            local: './',
            remote: "http://svn.ipaas.zhonglele.com/projects/branches/zk-authority"]],
        workspaceUpdater: [$class: 'UpdateUpdater']])
    }

    stage("Push to gogs") {
        echo "Push to gogs"
        sh "echo '# zk-authority' > README.md"
        sh "echo '.svn' > .gitignore"
        sh "echo '.settings' >> .gitignore"
        sh "echo '.classpath' >> .gitignore"
        sh "echo '.project' >> .gitignore"
        sh "echo 'target' >> .gitignore"
        sh "rm -rf .settings .classpath .project target"
        sh "git init"
        sh "git config user.name 'gogs' && git config user.email 'gogs@cn.com' && git config http.sslVerify false"
        sh "git add . && git commit -m \"${branchName}\""
        withCredentials([[$class: 'UsernamePasswordMultiBinding',
            credentialsId: 'dc989f32-73d7-489e-a808-c9b4c3115e0a',
            usernameVariable: 'GIT_USERNAME',
            passwordVariable: 'GIT_PASSWORD']]) {
                sh("git remote add origin https://${GIT_USERNAME}:${GIT_PASSWORD}@gogs-cicd.master0.ipaas.zhonglele.com/gogs/zk-authority.git")
                sh("git push origin master:${branchName}")
        }
        sh "rm -rf * .git .svn .gitignore"
    }

    stage ('Build') {
        sh "git init && git config http.sslVerify false"
        git url: "https://gogs-cicd.master0.ipaas.zhonglele.com/gogs/zk-authority.git", branch: "${branchName}", credentialsId:'dc989f32-73d7-489e-a808-c9b4c3115e0a'

        withMaven(maven: 'M3_HOME', mavenSettingsConfig: '1ba0ed09-4177-40c4-b51d-ecbd9dc624ec', mavenLocalRepo: '/var/lib/jenkins/.m2/repository') {
            sh "mvn clean install -DskipTests=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
        }
    }

    stage ('Push to Nexus') {
        withMaven(maven: 'M3_HOME', mavenSettingsConfig: '1ba0ed09-4177-40c4-b51d-ecbd9dc624ec', mavenLocalRepo: '/var/lib/jenkins/.m2/repository') {
            sh "mvn deploy -DskipTests=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
        }
    }
}
