node {
    // define value
    def branchName    = System.currentTimeMillis()
    def appName       = "zk-authority"
    def localRepo     = "/var/lib/jenkins/.m2/repository"
    env.JAVA_HOME     = "${tool 'JDK8'}"

    stage('Checkout svn') {
      sh "rm -rf .[!.]* *"
      checkout([$class: 'SubversionSCM',
        additionalCredentials: [],
        excludedCommitMessages: '',
        excludedRegions: '',
        excludedRevprop: '',
        excludedUsers: 'buildbot',
        filterChangelog: false,
        ignoreDirPropChanges: false,
        includedRegions: '',
        locations: [[credentialsId: 'SVN-credentialsId',
            depthOption: 'infinity',
            ignoreExternalsOption: true,
            local: './',
            remote: "http://svn/projects/branches/${appName}"]],
        workspaceUpdater: [$class: 'UpdateUpdater']])
    }

    stage ('Build') {
        withMaven(maven: 'M3_HOME', mavenSettingsConfig: 'mavenGlobalSettings-ID', mavenLocalRepo: "${localRepo}") {
            sh "mvn clean install -DskipTests=false -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
        }
    }

    stage ('Push to Nexus') {
        withMaven(maven: 'M3_HOME', mavenSettingsConfig: 'mavenGlobalSettings-ID', mavenLocalRepo: "${localRepo}") {
            sh "mvn deploy -DskipTests=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
        }
    }
}
