node {
    // define value
    def branchName    = System.currentTimeMillis()
    def appName       = "zk-finance2"
    def localRepo     = "/var/lib/jenkins/.m2/repository"
    def DEV_PROJECT   = "dev"
    def TEST_PROJECT  = "test"
    def STAGE_PROJECT = "stage"
    env.JAVA_HOME = "${tool 'JDK8'}"

    stage('Checkout svn') {
      sh 'rm -rf .[!.]* *'
      checkout([$class: 'SubversionSCM',
        additionalCredentials: [],
        excludedCommitMessages: '',
        excludedRegions: '',
        excludedRevprop: '',
        excludedUsers: 'buildbot',
        filterChangelog: false,
        ignoreDirPropChanges: false,
        includedRegions: '',
        locations: [[credentialsId: 'SVN-credentialsId',
          depthOption: 'infinity',
          ignoreExternalsOption: true,
          local: './',
          remote: "http://svn.ipaas.zhonglele.com/projects/branches/zk-finance2.0"]],
          workspaceUpdater: [$class: 'UpdateUpdater']
      ])
    }

    stage ('Build') {
        sh script: 'fileJdbc="./src/main/resources/properties/jdbc.properties" && lineNum=`grep -n "127.0.0.1" ${fileJdbc} |cut -d ":" -f 1` && sed -i "${lineNum}s!mysql://127.0.0.1:3306!mysql://172.30.101.13:3306!" ${fileJdbc}', returnStatus: true
        withMaven(maven: 'M3_HOME', mavenSettingsConfig: 'mavenGlobalSettings-ID', mavenLocalRepo: "${localRepo}") {
            sh "mvn clean install -DskipTests=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
        }
    }

    stage ('Deploy DEV') {
      sh 'mkdir -p oc-build/deployments'
      sh 'cp target/zk-finance.war oc-build/deployments/ROOT.war'
      sh "oc project ${DEV_PROJECT}"
      sh "oc delete all -l app=${appName} -n ${DEV_PROJECT} > /dev/null"
      sh "oc new-build --name=${appName}  --image-stream=openshift/jboss-eap70-openshift:1.4-34 --binary=true --labels=app=${appName} -n ${DEV_PROJECT} || true"
      sh "oc start-build ${appName} --from-dir=oc-build --wait=true -n ${DEV_PROJECT}"
      sh "curl https://raw.githubusercontent.com/boy12371/openshift-cicd/master/yaml/${DEV_PROJECT}-${appName}-persistent-template.yaml -o deploy.yaml --progress"
      sh "oc process -f deploy.yaml |oc create -f - -n ${DEV_PROJECT}"
    }

//    stage ('Deploy TEST') {
//      timeout(time:5, unit:'MINUTES') {
//         input message: "Promote to TEST?", ok: "Promote"
//    }

//    stage ('Deploy STAGE') {
//      timeout(time:5, unit:'MINUTES') {
//         input message: "Promote to STAGE?", ok: "Promote"
//    }
}
