node {
    // `date +%Y%m%d%H%M%S`
    def branchName      = System.currentTimeMillis()
    def appName         = "sso"
    def localRepo       = "/var/lib/jenkins/.m2/repository"
    def DEV_PROJECT     = "dev"
    def TEST_PROJECT    = "test"
    def PRODUCT_PROJECT = "product"
    env.JAVA_HOME = "${tool 'JDK8'}"

    stage('Checkout svn') {
      sh 'rm -rf .[!.]* *'
      checkout([$class: 'SubversionSCM',
        additionalCredentials: [],
        excludedCommitMessages: '',
        excludedRegions: '',
        excludedRevprop: '',
        excludedUsers: 'buildbot',
        filterChangelog: false,
        ignoreDirPropChanges: false,
        includedRegions: '',
        locations: [[credentialsId: 'SVN-credentialsId',
          depthOption: 'infinity',
          ignoreExternalsOption: true,
          local: './',
          remote: "http://svn/projects/branches/cas-sso-server"]],
          workspaceUpdater: [$class: 'UpdateUpdater']
      ])
    }

    stage ('Build') {
      sh'''#!/bin/bash -xe
        rm -rf .settings .classpath .project cas.log* perfStats.log readme target
        fileJdbc='./src/main/webapp/WEB-INF/cas.properties'
        sed -i 's/localhostdsa/sso-dev.ipaas.zhonglele.com/g' ${fileJdbc}
        sed -i 's/sso-dev.ipaas.zhonglele.com:8080/sso-dev.ipaas.zhonglele.com/g' ${fileJdbc}
        lineNum=`grep -n "host.name=localhost" ${fileJdbc} |cut -d ":" -f 1`
        sed -i "${lineNum}s/localhost/sso-dev.ipaas.zhonglele.com/" ${fileJdbc}
        lineNum=`grep -n "127.0.0.1:3307" ${fileJdbc} |cut -d ":" -f 1`
        sed -i "${lineNum}s/mysql:\\/\\/127.0.0.1:3307\\/security/mysql:\\/\\/172.30.101.19:3306\\/jboss7JT/" ${fileJdbc}
        lineNum=`grep -n "^dataSource.username=root" ${fileJdbc} |cut -d ":" -f 1`
        sed -i "${lineNum}s/^dataSource.username=root/dataSource.username=userS2Y/" ${fileJdbc}
        lineNum=`grep -n "^dataSource.password=123456" ${fileJdbc} |cut -d ":" -f 1`
        sed -i "${lineNum}s/^dataSource.password=123456/dataSource.password=JboprQarLvf4Vqg6/" ${fileJdbc}
      '''
      withMaven(maven: 'M3_HOME', mavenSettingsConfig: 'mavenGlobalSettings-ID', mavenLocalRepo: "${localRepo}") {
        sh "mvn clean install -DskipTests=false -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
      }
    }

    stage ('Deploy DEV') {
      sh'''#!/bin/bash -xe
        appName='sso'
        PROJECT='dev'
        mkdir -p oc-build/deployments
        cp target/cas-sso-server.war oc-build/deployments/ROOT.war
        oc project ${PROJECT}
        oc delete bc,is,dc,route,svc -l app=${appName} -n ${PROJECT}
        oc new-build --name=${appName}  --image-stream=openshift/jboss-eap70-openshift:1.4-34 --binary=true --labels=app=${appName} -n ${PROJECT} || true
        oc start-build ${appName} --from-dir=oc-build --wait=true -n ${PROJECT}
        curl https://raw.githubusercontent.com/boy12371/openshift-cicd/master/yaml/${PROJECT}_project/${PROJECT}-${appName}-persistent-template.yaml -o ${PROJECT}-deploy.yaml --progress
        oc process -f ${PROJECT}-deploy.yaml |oc create -f - -n ${PROJECT}
      '''
    }

    stage ('Deploy TEST') {
      timeout(time:5, unit:'MINUTES') {
        input message: "Promote to TEST?", ok: "Promote"
      }
      sh'''#!/bin/bash -xe
        fileJdbc='./src/main/webapp/WEB-INF/cas.properties'
        sed -i 's/sso-dev.ipaas.zhonglele.com/sso-test.ipaas.zhonglele.com/g' ${fileJdbc}
        lineNum=`grep -n "172.30.101.19:3306" ${fileJdbc} |cut -d ":" -f 1`
        sed -i "${lineNum}s/mysql:\\/\\/172.30.101.19:3306/mysql:\\/\\/172.30.102.19:3306/" ${fileJdbc}
      '''
      withMaven(maven: 'M3_HOME', mavenSettingsConfig: 'mavenGlobalSettings-ID', mavenLocalRepo: "${localRepo}") {
        sh "mvn clean install -DskipTests=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
      }
      sh'''#!/bin/bash -xe
        appName='sso'
        PROJECT='test'
        rm -rf oc-build && mkdir -p oc-build/deployments
        cp target/cas-sso-server.war oc-build/deployments/ROOT.war
        oc project ${PROJECT}
        oc delete bc,is,dc,route,svc -l app=${appName} -n ${PROJECT} > /dev/null
        oc new-build --name=${appName}  --image-stream=openshift/jboss-eap70-openshift:1.4-34 --binary=true --labels=app=${appName} -n ${PROJECT} || true
        oc start-build ${appName} --from-dir=oc-build --wait=true -n ${PROJECT}
        curl https://raw.githubusercontent.com/boy12371/openshift-cicd/master/yaml/${PROJECT}_project/${PROJECT}-${appName}-persistent-template.yaml -o ${PROJECT}-deploy.yaml --progress
        oc process -f ${PROJECT}-deploy.yaml |oc create -f - -n ${PROJECT}
      '''
    }

    stage ('Deploy PRODUCT') {
      timeout(time:5, unit:'MINUTES') {
        input message: "Promote to PRODUCT?", ok: "Promote"
      }
      sh'''#!/bin/bash -xe
        fileJdbc='./src/main/webapp/WEB-INF/cas.properties'
        sed -i 's/sso-test.ipaas.zhonglele.com/sso.ipaas.zhonglele.com/g' ${fileJdbc}
        lineNum=`grep -n "172.30.102.19" ${fileJdbc} |cut -d ":" -f 1`
        sed -i "${lineNum}s/mysql:\\/\\/172.30.102.19:3306/mysql:\\/\\/172.30.103.19:3306/" ${fileJdbc}
      '''
      withMaven(maven: 'M3_HOME', mavenSettingsConfig: 'mavenGlobalSettings-ID', mavenLocalRepo: "${localRepo}") {
        sh "mvn clean install -DskipTests=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
      }
      sh'''#!/bin/bash -xe
        appName='sso'
        PROJECT='product'
        rm -rf oc-build && mkdir -p oc-build/deployments
        cp target/cas-sso-server.war oc-build/deployments/ROOT.war
        oc project ${PROJECT}
        oc delete bc,is,dc,route,svc -l app=${appName} -n ${PROJECT} > /dev/null
        oc new-build --name=${appName}  --image-stream=openshift/jboss-eap70-openshift:1.4-34 --binary=true --labels=app=${appName} -n ${PROJECT} || true
        oc start-build ${appName} --from-dir=oc-build --wait=true -n ${PROJECT}
        curl https://raw.githubusercontent.com/boy12371/openshift-cicd/master/yaml/${PROJECT}_project/${PROJECT}-${appName}-persistent-template.yaml -o ${PROJECT}-deploy.yaml --progress
        oc process -f ${PROJECT}-deploy.yaml |oc create -f - -n ${PROJECT}
      '''
    }
}
