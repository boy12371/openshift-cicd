#部署amq模板
kind: Template
apiVersion: v1
metadata:
  name: amq-persistent
  creationTimestamp: null
  annotations:
    openshift.io/display-name: Amq App (Persistent)
    description: |-
      Application template for JBoss A-MQ brokers. These can be deployed
      as standalone and use persistent storage for saving messages.
    iconClass: icon-jboss
    tags: messaging, amq, jboss, xpaas
labels:
  template: base-amq-persistent-template
  group: base
message: Simple deploy amq
#参数
parameters:
#当前项目名称
- name: NAMESPACE
  displayName: Current Project Namespace
  description: Name of the current project namespace.
  value: base
#当前模板名称
- name: TEMPLATE
  displayName: Current Template Name
  description: Name of the current template name.
  value: base-amq-persistent-template
#默认服务账户名称
- name: DEFAULT_NAME
  displayName: Default ServiceAccount Name
  description: Name of the default serviceaccount.
  value: default
#AMQ数据库容器名称
- name: AMQ_SERVICE
  displayName: Amq Service Name
  description: The name of the OpenShift Service exposed for the Amq container.
  value: amq
#Amq数据存放路径
- name: AMQ_DATA_PATH
  displayName: Amq Data Path
  description: The path of the data storage for the Amq container.
  value: /opt/amq/data
#Amq用户名
- name: MQ_USERNAME
  displayName: Amq Username
  description: User name for standard broker user.  It is required for connecting
    to the broker.  If left empty, it will be generated.
  value: userS2Y
  required: false
#Amq数据库密码
- name: MQ_PASSWORD
  displayName: Amq Password
  description: Password for Amq backend
  value: JboprQarLvf4Vqg6
#镜像所在项目名称
- name: IMAGE_NAMESPACE
  displayName: Base ImageStream Namespace
  description: The OpenShift Namespace where the Base ImageStream resides.
  value: openshift
#拆分数据目录
- name: MQ_SPLIT
  displayName: Split The Data Directory
  description: Split the data directory for each node in a mesh.
  value: 'false'
  required: false
#协议配置
- name: MQ_PROTOCOL
  description: |-
    Protocols to configure, separated by commas.  Allowed values are:/
    'openwire', 'amqp', 'stomp' and 'mqtt'.
  value: openwire
  required: false
#队列名称
- name: MQ_QUEUES
  displayName: Queue Names
  description: |-
    Queue names, separated by commas.  These queues will be automatically created
    when the broker starts.  If left empty, queues will be still created dynamically.
  value: ''
  required: false
#主题名称
- name: MQ_TOPICS
  displayName: Topic Names
  description: |-
    Topic names, separated by commas.  These topics will be automatically created
    when the broker starts.  If left empty, topics will be still created dynamically.
  value: ''
  required: false
#允许序列化的包
- name: MQ_SERIALIZABLE_PACKAGES
  displayName: Queue Serializable Packages
  description: |-
    List of packages that are allowed to be serialized for use in ObjectMessage,
    separated by commas. If your app doesn't use ObjectMessages, leave this blank.
    This is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html
  value: ''
  required: false
#Amq网格发现类型
- name: MQ_MESH_DISCOVERY_TYPE
  displayName: Amq Mesh Discovery Type
  description: |-
    The discovery agent type to use for discovering mesh endpoints.  'dns' will
    use OpenShift's DNS service to resolve endpoints.  'kube' will use Kubernetes
    REST API to resolve service endpoints.  If using 'kube' the service account for
    the pod must have the 'view' role, which can be added via 'oc policy add-role-to-user
    view system:serviceaccount:<namespace>:default' where <namespace> is the project
    namespace.
  value: kube
  required: false
#Amq存储使用限制
- name: MQ_STORAGE_USAGE_LIMIT
  displayName: Amq Storage Usage Limit
  description: The A-MQ storage usage limit
  value: 100 gb
  required: false
#日志信息存放路径
- name: LOG_MESSAGE
  displayName: Termination Message Path
  description: Maximum amount of memory the container can use.
  value: /dev/termination-log
#部署超时
- name: TIME_OUT
  displayName: timeout seconds
  description: Deployment params timeout seconds
  value: '600'
#CST时区
- name: SERVER_TIMEZONE
  displayName: CST Timezone
  description: China Standard Time for POD
  value: Asia/Shanghai
objects:
#amq数据库部署配置
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${AMQ_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${AMQ_SERVICE}"
      deploymentconfig: "${AMQ_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: The DeploymentConfig for Amq
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: "${TIME_OUT}"
      resources: {}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - "${AMQ_SERVICE}"
          from:
            kind: ImageStreamTag
            namespace: "${IMAGE_NAMESPACE}"
            name: jboss-amq62-openshift:1.4-14
          lastTriggeredImage: ''
    replicas: 1
    test: false
    selector:
      app: "${AMQ_SERVICE}"
      deploymentconfig: "${AMQ_SERVICE}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: "${AMQ_SERVICE}"
          deploymentconfig: "${AMQ_SERVICE}"
      spec:
        volumes:
          - name: "${AMQ_SERVICE}-data"
            persistentVolumeClaim:
              claimName: "${AMQ_SERVICE}-data"
        containers:
          - name: "${AMQ_SERVICE}"
            image: ' '
            ports:
              - name: jolokia
                containerPort: 8778
                protocol: TCP
              - name: amqp
                containerPort: 5672
                protocol: TCP
              - name: mqtt
                containerPort: 1883
                protocol: TCP
              - name: stomp
                containerPort: 61613
                protocol: TCP
              - name: tcp
                containerPort: 61616
                protocol: TCP
            env:
              - name: AMQ_USER
                value: "${MQ_USERNAME}"
              - name: AMQ_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "${AMQ_SERVICE}"
                    key: mq-password
              - name: AMQ_TRANSPORTS
                value: "${MQ_PROTOCOL}"
              - name: AMQ_QUEUES
                value: "${MQ_QUEUES}"
              - name: AMQ_TOPICS
                value: "${MQ_TOPICS}"
              - name: MQ_SERIALIZABLE_PACKAGES
                value: "${MQ_SERIALIZABLE_PACKAGES}"
              - name: AMQ_SPLIT
                value: "${MQ_SPLIT}"
              - name: AMQ_MESH_DISCOVERY_TYPE
                value: "${MQ_MESH_DISCOVERY_TYPE}"
              - name: AMQ_MESH_SERVICE_NAME
                value: "${NAMESPACE}-${AMQ_SERVICE}-openwire"
              - name: AMQ_MESH_SERVICE_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: AMQ_STORAGE_USAGE_LIMIT
                value: "${MQ_STORAGE_USAGE_LIMIT}"
              - name: TZ
                value: "${SERVER_TIMEZONE}"
            resources:
              limits:
                memory: 2Gi
            volumeMounts:
              - name: "${AMQ_SERVICE}-data"
                mountPath: "${AMQ_DATA_PATH}"
            readinessProbe:
              exec:
                command:
                  - /bin/bash
                  - '-c'
                  - /opt/amq/bin/readinessProbe.sh
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: "${LOG_MESSAGE}"
            imagePullPolicy: Always
            securityContext:
              capabilities: {}
              privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: "${DEFAULT_NAME}"
        serviceAccount: "${DEFAULT_NAME}"
        securityContext: {}
  status: {}
#AMQP服务
# - apiVersion: v1
#   kind: Service
#   metadata:
#     name: "${NAMESPACE}-${AMQ_SERVICE}-amqp"
#     namespace: "${NAMESPACE}"
#     creationTimestamp: null
#     labels:
#       app: "${AMQ_SERVICE}"
#       group: "${NAMESPACE}"
#       template: "${TEMPLATE}"
#     annotations:
#       description: The broker's AMQP port.
#   spec:
#     ports:
#       - name: "${AMQ_SERVICE}-5672-tcp"
#         protocol: TCP
#         port: 5672
#         targetPort: 5672
#         nodePort: 0
#     selector:
#       app: "${AMQ_SERVICE}"
#       deploymentconfig: "${AMQ_SERVICE}"
#     clusterIP: 172.30.99.14
#     type: ClusterIP
#     sessionAffinity: None
#MQTT服务
# - apiVersion: v1
#   kind: Service
#   metadata:
#     name: "${NAMESPACE}-${AMQ_SERVICE}-mqtt"
#     namespace: "${NAMESPACE}"
#     creationTimestamp: null
#     labels:
#       app: "${AMQ_SERVICE}"
#       group: "${NAMESPACE}"
#       template: "${TEMPLATE}"
#     annotations:
#       description: The broker's MQTT port.
#   spec:
#     ports:
#       - name: "${AMQ_SERVICE}-1883-tcp"
#         protocol: TCP
#         port: 1883
#         targetPort: 1883
#         nodePort: 0
#     selector:
#       app: "${AMQ_SERVICE}"
#       deploymentconfig: "${AMQ_SERVICE}"
#     clusterIP: 172.30.99.15
#     type: ClusterIP
#     sessionAffinity: None
#STOMP服务
# - apiVersion: v1
#   kind: Service
#   metadata:
#     name: "${NAMESPACE}-${AMQ_SERVICE}-stomp"
#     namespace: "${NAMESPACE}"
#     creationTimestamp: null
#     labels:
#       app: "${AMQ_SERVICE}"
#       group: "${NAMESPACE}"
#       template: "${TEMPLATE}"
#     annotations:
#       description: The broker's STOMP port.
#   spec:
#     ports:
#       - name: "${AMQ_SERVICE}-61613-tcp"
#         protocol: TCP
#         port: 61613
#         targetPort: 61613
#         nodePort: 0
#     selector:
#       app: "${AMQ_SERVICE}"
#       deploymentconfig: "${AMQ_SERVICE}"
#     clusterIP: 172.30.99.16
#     type: ClusterIP
#     sessionAffinity: None
#OPENWIRE服务
- apiVersion: v1
  kind: Service
  metadata:
    name: "${NAMESPACE}-${AMQ_SERVICE}-openwire"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${AMQ_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: The broker's OpenWire port.
  spec:
    ports:
      - name: "${AMQ_SERVICE}-61616-tcp"
        protocol: TCP
        port: 61616
        targetPort: 61616
        nodePort: 0
    selector:
      app: "${AMQ_SERVICE}"
      deploymentconfig: "${AMQ_SERVICE}"
    clusterIP: 172.30.99.17
    type: ClusterIP
    sessionAffinity: None
# Amq口令
- apiVersion: v1
  kind: Secret
  metadata:
    name: "${AMQ_SERVICE}"
    annotations:
      template.openshift.io/expose-password: "{.data['mq-password']}"
  stringData:
    mq-password: "${MQ_PASSWORD}"
