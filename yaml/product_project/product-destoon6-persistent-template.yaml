#部署destoon模板
kind: Template
apiVersion: v1
metadata:
  name: destoon-persistent
  creationTimestamp: null
  annotations:
    openshift.io/display-name: Destoon App (Persistent)
    description: |-
      All resource for destoon, with persistent storage.
    iconClass: icon-php
    tags: destoon
labels:
  template: product-destoon-persistent
  group: product
message: Simple deploy Destoon App
#参数
parameters:
#当前项目名称
- name: NAMESPACE
  displayName: Current Project Namespace
  description: Name of the current project namespace.
  value: product
#当前模板名称
- name: TEMPLATE
  displayName: Current Template Name
  description: Name of the current template name.
  value: product-destoon-persistent
#默认服务账户名称
- name: DEFAULT_NAME
  displayName: Default ServiceAccount Name
  description: Name of the default serviceaccount.
  value: default
#Destoon容器名称
- name: DESTOON_SERVICE
  displayName: Destoon Service Name
  description: The name of the OpenShift Service exposed for the Destoon container.
  value: destoon
#MySQL数据库容器名称
- name: MYSQL_SERVICE
  displayName: MySQL Service Name
  description: The name of the OpenShift Service exposed for the MySQL container.
  value: mysql
#Destoon数据库用户名
- name: DESTOON_MYSQL_USER
  displayName: Destoon MySQL User Name
  description: Username for Destoon MySQL backend
  value: userQUH
#Destoon数据库密码
- name: DESTOON_MYSQL_PASSWORD
  displayName: Destoon MySQL Password
  description: Password for Destoon MySQL backend
  value: AyqgMq2hiscHQu5E
#Destoon数据库Root密码
- name: DESTOON_MYSQL_ROOT_PASSWORD
  displayName: Destoon MySQL Root Password
  description: Password for Destoon MySQL Root backend
  value: BttD6qMOcRunnFnd
#Destoon数据库名
- name: DESTOON_MYSQL_DATABASE
  displayName: Destoon MySQL Datebase Name
  description: Datebase Name for Destoon MySQL backend
  value: destoondb
- name: CAKEPHP_SECRET_TOKEN
  displayName: CakePHP secret token
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: CAKEPHP_SECURITY_SALT
  displayName: CakePHP Security Salt
  description: Security salt for session hash.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: CAKEPHP_SECURITY_CIPHER_SEED
  displayName: CakePHP Security Cipher Seed
  description: Security cipher seed for session hash.
  generate: expression
  from: "[0-9]{30}"
- name: OPCACHE_REVALIDATE_FREQ
  displayName: OPcache Revalidation Frequency
  description: |-
    How often to check script timestamps for updates, in seconds. 0 will
    result in OPcache checking for updates on every request.
  value: '2'
#日志信息存放路径
- name: LOG_MESSAGE
  displayName: Termination Message Path
  description: Maximum amount of memory the container can use.
  value: /dev/termination-log
#部署超时
- name: TIME_OUT
  displayName: timeout seconds
  description: Deployment params timeout seconds
  value: '600'
#镜像所在项目名称
- name: IMAGE_NAMESPACE
  displayName: The ImageStream Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
#CST时区
- name: SERVER_TIMEZONE
  displayName: CST Timezone
  description: China Standard Time for POD
  value: Asia/Shanghai
objects:
#创建角色绑定
# - apiVersion: v1
#   groupNames: null
#   kind: RoleBinding
#   metadata:
#     creationTimestamp: null
#     labels:
#       app: "${DESTOON_SERVICE}"
#       group: "${NAMESPACE}"
#       template: "${TEMPLATE}"
#     name: "${DEFAULT_NAME}_edit"
#     namespace: "${NAMESPACE}"
#   roleRef:
#     name: edit
#   subjects:
#   - kind: ServiceAccount
#     name: "${DEFAULT_NAME}"
#     namespace: "${NAMESPACE}"
#Destoon的路由
- apiVersion: v1
  kind: Route
  metadata:
    name: "${DESTOON_SERVICE}-http"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
    annotations:
      description: Route for Destoon http service.
      openshift.io/host.generated: 'true'
  spec:
    host: destoon.ipaas.zhonglele.com
    to:
      kind: Service
      name: "${NAMESPACE}-${DESTOON_SERVICE}"
      weigth: 100
    port:
      targetPort: "${DESTOON_SERVICE}-8080-tcp"
    wildcardPolicy: None
#Destoon数据库存储
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${DESTOON_SERVICE}-${MYSQL_SERVICE}"
    name: "${NAMESPACE}-${DESTOON_SERVICE}-${MYSQL_SERVICE}-pv"
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 5Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: "${DESTOON_SERVICE}-${MYSQL_SERVICE}-data"
      namespace: "${NAMESPACE}"
    hostPath:
      path: "/mnt/data/${NAMESPACE}-storage/${DESTOON_SERVICE}-${MYSQL_SERVICE}/"
    persistentVolumeReclaimPolicy: Recycle
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${DESTOON_SERVICE}-${MYSQL_SERVICE}"
    name: "${DESTOON_SERVICE}-${MYSQL_SERVICE}-data"
    namespace: "${NAMESPACE}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    volumeName: "${NAMESPACE}-${DESTOON_SERVICE}-${MYSQL_SERVICE}-pv"
#Destoon存储
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${DESTOON_SERVICE}"
      template: "${TEMPLATE}"
    name: "${NAMESPACE}-${DESTOON_SERVICE}-pv"
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 5Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: "${DESTOON_SERVICE}-data"
      namespace: "${NAMESPACE}"
    hostPath:
      path: "/mnt/data/${NAMESPACE}-storage/${DESTOON_SERVICE}/"
    persistentVolumeReclaimPolicy: Recycle
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${DESTOON_SERVICE}"
      template: "${TEMPLATE}"
    name: "${DESTOON_SERVICE}-data"
    namespace: "${NAMESPACE}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    volumeName: "${NAMESPACE}-${DESTOON_SERVICE}-pv"
#Destoon的mysql数据库部署配置
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${DESTOON_SERVICE}-${MYSQL_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
      deploymentconfig: "${DESTOON_SERVICE}-${MYSQL_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: The DeploymentConfig for Destoon MySQL
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: "${TIME_OUT}"
      resources: {}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - "${MYSQL_SERVICE}"
          from:
            kind: ImageStreamTag
            namespace: "${IMAGE_NAMESPACE}"
            name: mysql-57-centos7:latest
          lastTriggeredImage: ''
    replicas: 1
    test: false
    selector:
      app: "${DESTOON_SERVICE}"
      deploymentconfig: "${DESTOON_SERVICE}-${MYSQL_SERVICE}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: "${DESTOON_SERVICE}"
          deploymentconfig: "${DESTOON_SERVICE}-${MYSQL_SERVICE}"
      spec:
        volumes:
          - name: "${MYSQL_SERVICE}-data"
            persistentVolumeClaim:
              claimName: "${DESTOON_SERVICE}-${MYSQL_SERVICE}-data"
        containers:
          - name: "${MYSQL_SERVICE}"
            image: ' '
            ports:
              - containerPort: 3306
                protocol: TCP
            env:
              - name: MYSQL_USER
                value: "${DESTOON_MYSQL_USER}"
              - name: MYSQL_PASSWORD
                value: "${DESTOON_MYSQL_PASSWORD}"
              - name: MYSQL_ROOT_PASSWORD
                value: "${DESTOON_MYSQL_ROOT_PASSWORD}"
              - name: MYSQL_DATABASE
                value: "${DESTOON_MYSQL_DATABASE}"
              - name: TZ
                value: "${SERVER_TIMEZONE}"
            resources: {}
            volumeMounts:
              - name: "${MYSQL_SERVICE}-data"
                mountPath: /var/lib/mysql/data
            livenessProbe:
              tcpSocket:
                port: 3306
              initialDelaySeconds: 30
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER
                    -D $MYSQL_DATABASE -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: "${LOG_MESSAGE}"
            imagePullPolicy: Always
            securityContext:
              capabilities: {}
              privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: "${DEFAULT_NAME}"
        serviceAccount: "${DEFAULT_NAME}"
        securityContext: {}
  status: {}
#Destoon的部署配置
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${DESTOON_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: The DeploymentConfig for Destoon
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: "${TIME_OUT}"
      resources: {}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - "${DESTOON_SERVICE}"
          from:
            kind: ImageStreamTag
            namespace: "${NAMESPACE}"
            name: "${DESTOON_SERVICE}:latest"
          lastTriggeredImage: ''
    replicas: 1
    test: false
    selector:
      app: "${DESTOON_SERVICE}"
      deploymentconfig: "${DESTOON_SERVICE}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: "${DESTOON_SERVICE}"
          deploymentconfig: "${DESTOON_SERVICE}"
      spec:
        volumes:
          - name: "${DESTOON_SERVICE}-data"
            persistentVolumeClaim:
              claimName: "${DESTOON_SERVICE}-data"
        containers:
          - name: "${DESTOON_SERVICE}"
            image: ' '
            ports:
              - containerPort: 8080
                protocol: TCP
            env:
              - name: DATABASE_SERVICE_NAME
                value: "${DESTOON_SERVICE}-${MYSQL_SERVICE}"
              - name: DATABASE_ENGINE
                value: "${MYSQL_SERVICE}"
              - name: DATABASE_NAME
                value: "${DESTOON_MYSQL_DATABASE}"
              - name: DATABASE_USER
                valueFrom:
                  secretKeyRef:
                    name: "${DESTOON_SERVICE}"
                    key: database-user
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "${DESTOON_SERVICE}"
                    key: database-password
              - name: CAKEPHP_SECRET_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: "${DESTOON_SERVICE}"
                    key: cakephp-secret-token
              - name: CAKEPHP_SECURITY_SALT
                valueFrom:
                  secretKeyRef:
                    name: "${DESTOON_SERVICE}"
                    key: cakephp-security-salt
              - name: CAKEPHP_SECURITY_CIPHER_SEED
                valueFrom:
                  secretKeyRef:
                    name: "${DESTOON_SERVICE}"
                    key: cakephp-security-cipher-seed
              - name: OPCACHE_REVALIDATE_FREQ
                value: "${OPCACHE_REVALIDATE_FREQ}"
              - name: TZ
                value: "${SERVER_TIMEZONE}"
            resources: {}
            volumeMounts:
              - name: "${DESTOON_SERVICE}-data"
                mountPath: /opt/app-root/src
            livenessProbe:
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 5
            readinessProbe:
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 5
            terminationMessagePath: "${LOG_MESSAGE}"
            imagePullPolicy: Always
            securityContext:
              capabilities: {}
              privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: "${DEFAULT_NAME}"
        serviceAccount: "${DEFAULT_NAME}"
        securityContext: {}
  status: {}
#Destoon的mysql数据库服务
- apiVersion: v1
  kind: Service
  metadata:
    name: "${NAMESPACE}-${DESTOON_SERVICE}-${MYSQL_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: the Service for Destoon MySQL
  spec:
    ports:
      - name: "${MYSQL_SERVICE}-3306-tcp"
        protocol: TCP
        port: 3306
        targetPort: 3306
    selector:
      app: "${DESTOON_SERVICE}"
      deploymentconfig: "${DESTOON_SERVICE}-${MYSQL_SERVICE}"
    clusterIP: 172.30.103.23
    type: ClusterIP
    sessionAffinity: None
#Destoon的服务
- apiVersion: v1
  kind: Service
  metadata:
    name: "${NAMESPACE}-${DESTOON_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${DESTOON_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: the Service for Destoon
      service.alpha.openshift.io/dependencies: '[{"name": "${NAMESPACE}-${DESTOON_SERVICE}-${MYSQL_SERVICE}", "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: 'true'
  spec:
    ports:
      - name: "${DESTOON_SERVICE}-8080-tcp"
        protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      app: "${DESTOON_SERVICE}"
      deploymentconfig: "${DESTOON_SERVICE}"
    clusterIP: 172.30.103.22
    type: ClusterIP
    sessionAffinity: None
#Destoon口令
- apiVersion: v1
  kind: Secret
  metadata:
    name: "${DESTOON_SERVICE}"
    labels:
      app: "${DESTOON_SERVICE}"
  stringData:
    database-user: "${DESTOON_MYSQL_USER}"
    database-password: "${DESTOON_MYSQL_PASSWORD}"
    cakephp-secret-token: "${CAKEPHP_SECRET_TOKEN}"
    cakephp-security-salt: "${CAKEPHP_SECURITY_SALT}"
    cakephp-security-cipher-seed: "${CAKEPHP_SECURITY_CIPHER_SEED}"
#Destoon编译后镜像
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: "${DESTOON_SERVICE}"
    namespace: "${NAMESPACE}"
    labels:
      app: "${DESTOON_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: Keeps track of changes in the application image
#Destoon编译配置
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: "${DESTOON_SERVICE}"
    namespace: "${NAMESPACE}"
    labels:
      app: "${DESTOON_SERVICE}"
    annotations:
      description: Defines how to build the application
  spec:
    triggers:
      - type: ImageChange
        imageChange: ''
    source:
      type: Git
      git:
        uri: https://github.com/boy12371/destoonb2b.git
        ref: "master"
      contextDir: "/"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_NAMESPACE}"
          name: php-70-centos7:latest
    output:
      to:
        kind: ImageStreamTag
        name: "${DESTOON_SERVICE}:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
    resources: {}
    postCommit: {}
