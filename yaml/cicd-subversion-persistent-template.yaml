#部署subversion模板
kind: Template
apiVersion: v1
metadata:
  name: subversion-persistent
  creationTimestamp: null
  annotations:
    openshift.io/display-name: Subversion App (Persistent)
    description: |-
      All resource for subversion, with persistent storage.
    iconClass: icon-jenkins
    tags: subversion
labels:
  template: cicd-subversion-persistent-template
  group: cicd
message: Simple deploy Subversion App
#参数
parameters:
#当前项目名称
- name: NAMESPACE
  displayName: Current Project Namespace
  description: Name of the current project namespace.
  value: cicd
#当前模板名称
- name: TEMPLATE
  displayName: Current Template Name
  description: Name of the current template name.
  value: cicd-subversion-persistent-template
#默认服务账户名称
- name: DEFAULT_NAME
  displayName: Default ServiceAccount Name
  description: Name of the default serviceaccount.
  value: default
#Subversion容器名称
- name: SUBVERSION_SERVICE
  displayName: Subversion Service Name
  description: The name of the OpenShift Service exposed for the Subversion container.
  value: subversion
#日志信息存放路径
- name: LOG_MESSAGE
  displayName: Termination Message Path
  description: Maximum amount of memory the container can use.
  value: /dev/termination-log
#部署超时
- name: TIME_OUT
  displayName: timeout seconds
  description: Deployment params timeout seconds
  value: '600'
#镜像所在项目名称
- name: IMAGE_NAMESPACE
  displayName: Cicd ImageStream Namespace
  description: The OpenShift Namespace where the Cicd ImageStream resides.
  value: openshift
#CST时区
- name: SERVER_TIMEZONE
  displayName: CST Timezone
  description: China Standard Time for POD
  value: Asia/Shanghai
objects:
#创建角色绑定
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    labels:
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    name: "${DEFAULT_NAME}_edit"
    namespace: "${NAMESPACE}"
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: "${DEFAULT_NAME}"
    namespace: "${NAMESPACE}"
#Subversion的路由
- apiVersion: v1
  kind: Route
  metadata:
    name: "${SUBVERSION_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${SUBVERSION_SERVICE}"
    annotations:
      description: Route for Subversion http service.
      openshift.io/host.generated: 'true'
  spec:
    to:
      kind: Service
      name: "${SUBVERSION_SERVICE}"
      weigth: 100
    port:
      targetPort: 80-tcp
    tls:
      termination: edge
      certificate: |
        -----BEGIN CERTIFICATE-----
        MIIEZTCCA02gAwIBAgIJAIqh9C24phyUMA0GCSqGSIb3DQEBBQUAMIGdMQswCQYD
        VQQGEwJDTjERMA8GA1UECBMIU2hhbmdoYWkxETAPBgNVBAcTCFNoYW5naGFpMRIw
        EAYDVQQKEwlaSE9OR0xFTEUxFjAUBgNVBAsTDVpIT05HTEVMRS5DT00xJDAiBgkq
        hkiG9w0BCQEWFXN1cHBvcnRAemhvbmdsZWxlLmNvbTEWMBQGA1UEAxMNemhvbmds
        ZWxlLmNvbTAeFw0xNzA2MDIxNzA4MjFaFw0xODA2MDMxNzA4MjFaMIGdMQswCQYD
        VQQGEwJDTjERMA8GA1UECBMIU2hhbmdoYWkxETAPBgNVBAcTCFNoYW5naGFpMRIw
        EAYDVQQKEwlaSE9OR0xFTEUxFjAUBgNVBAsTDVpIT05HTEVMRS5DT00xJDAiBgkq
        hkiG9w0BCQEWFXN1cHBvcnRAemhvbmdsZWxlLmNvbTEWMBQGA1UEAxMNemhvbmds
        ZWxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKqf8l0ZwWA7
        qnv7kMLFgrMXxuFsCv4KkcD4Nrx2gWOfVYDYU/oVQWtz1nriAA1ldDTy7DJGD1Rw
        sMCEwPq4p0O7mZk2kBUbtb9tOp5E9nOoY9mCFhEpqptjH7TBmPzMckW9fzPefdBU
        SM9aGlALLwtoJkTTnngPmPtVUVmZ1qqo19zlRdAldbo2dY3ELpQxgBApG1orFO7Q
        gt03xNJOos1QkLv9nAMDxbWkObBkN3SKUAb8mNW3Qm9y411wgQeffnTnultsCI5j
        D4vdnjFmgOO66UPm8KrAYYwJYK/KhZxbzDqekJGQT6PlA/q5V4bwd3jLNSCMqaKl
        S1tfM8Lu8+sCAwEAAaOBpTCBojCBnwYDVR0RBIGXMIGUgg16aG9uZ2xlbGUuY29t
        ghNpcGFhcy56aG9uZ2xlbGUuY29tghttYXN0ZXIwLmlwYWFzLnpob25nbGVsZS5j
        b22CDyouemhvbmdsZWxlLmNvbYIVKi5pcGFhcy56aG9uZ2xlbGUuY29tgh0qLm1h
        c3RlcjAuaXBhYXMuemhvbmdsZWxlLmNvbYcE0jMau4cEfwAAATANBgkqhkiG9w0B
        AQUFAAOCAQEATMHQ6y+z3abki9qsNrLXcbvJZR3mg7TfIVwlgWEtP7nFxnjDkB3v
        7C6gRY2p3oMvZGhuwEsQX7DC1LJQnWRZVjnJwt4jIwch2XoGsTrXq40kDRg+wHXd
        kx+iE1U113CW1X4Rdyoc841ZKZthbzDNQQUdY19znN0jN+OxAaHUUc8hjgAasFAb
        0ZRs8kztQCz55M/QtQyYEc/iC8mkCBMW5aKPVODCqp6GklRX0UTwjSJarLlC/zMB
        x8nRQDAh5WAjIdzUrnKm97T1Pd1FPWer/dScY78qJMteBz97KwItWMTYjSmLiyag
        EswyntcjwpceMIdhLOQjWSZp6a9BGmGfZQ==
        -----END CERTIFICATE-----
      key: |
        -----BEGIN PRIVATE KEY-----
        MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCqn/JdGcFgO6p7
        +5DCxYKzF8bhbAr+CpHA+Da8doFjn1WA2FP6FUFrc9Z64gANZXQ08uwyRg9UcLDA
        hMD6uKdDu5mZNpAVG7W/bTqeRPZzqGPZghYRKaqbYx+0wZj8zHJFvX8z3n3QVEjP
        WhpQCy8LaCZE0554D5j7VVFZmdaqqNfc5UXQJXW6NnWNxC6UMYAQKRtaKxTu0ILd
        N8TSTqLNUJC7/ZwDA8W1pDmwZDd0ilAG/JjVt0JvcuNdcIEHn35057pbbAiOYw+L
        3Z4xZoDjuulD5vCqwGGMCWCvyoWcW8w6npCRkE+j5QP6uVeG8Hd4yzUgjKmipUtb
        XzPC7vPrAgMBAAECggEAdcd5LskTklE9it4JfFmIsgWstHi3UcuL90+fwRJwmIsp
        I4qw1UWM5haNLEALVzP8NnyljMKN3HT5nbtF1wxV8cxy568hYGDDYcONnijuksHf
        QwqoHurLKP4Qqd6ls4ORMhDv2Kcx4/f6Vp/U4AIIVHBtUj9d+XSS3pNzV015QE2y
        JvURLvm4CNiunj08xiP2KExoa9z/LTeqav6eb2353Gw/uqK5fBaLOGkMUbFnA8pH
        Saxr5nmf7N8JbEtYTm+TCL/TLKX8GhtakQxLoSFZAJ3ArYiDrg/3rFq4yohh2ftf
        vZAclI+6eHbiZ5Qj3D39Zac2VUCWVZi/PkhRb2CPoQKBgQDWykYFijdkMfObMfjQ
        sftE3YChsznI1umb49gHYkJpPKUfrWfOMXF9B/836YZ/Wq2qY/UL3McaMtzX0qp+
        UcI+zfPNI3K4U5uOVho3+waMxWQyi54isSgOGJObqAvevSUlKZd5MNliRkk6zIjP
        rjuCxI0D38HjRJK5gSJT7xv5GwKBgQDLXG3TdY4lQXn0wHdD20UbTC0er1C16wLm
        B/CKnYxRDAmNhvf5Bl+0GDRdHKN8WSpmIjgWwoxPeOMJmtn+g0ZjGlk8t4jPwDwU
        HG9j2aqQh2V4ZzWNUc0f2KYpxeXGXHzLoOvfG7KairgAZY7lFzK+E2GoCPlK9tf3
        vsuATWjtcQKBgEDqSzVba5hFnIl4FeoFEJrkkv7L6xfvFBWATAcXRFkH8iPbxbbE
        rLcMFq9wTazp2/jWUvYt2KLrYmF8EvkwfpN6rUd/gimBY08maLAolvcupTS9i6KS
        hjeUZ/AwXr4HzlUn99ax09FmyrURofuaffPssW3NT4z/aZTVGWnip0KnAoGAQGis
        7D2eYNRlIQzYeWh4cdXlsINMZ+HgUCURnYWazIyodefaoEfRhgPoidkpOpgvIpwR
        8bt6ny0lk4Q1KTRA1eChhOaIcWxsWt5KtXBaYl5P2BuwTWssMbr3neFtDi964y+7
        pTVrkyD+eDmyUYLQcn1G/+aftouKCZCneaKK6jECgYAuONkMqFKluG4a6nh+HRD/
        dQc5pf2QzTlhSJ9+dcnMu5qghlrVvK1aVuENbOTUzk2A6UIqJ4kGVaixln+Tatte
        PlRfR2XkMZlkg3k/8g/iI8Bz8bzOFD/RwZn6eaMaDgCAVXcxMsxKPcZLYMobJ7rL
        emSOjx+MYAM+sKB2j9vq2w==
        -----END PRIVATE KEY-----
      insecureEdgeTerminationPolicy: Redirect
- apiVersion: v1
  kind: Route
  metadata:
    name: "${SUBVERSION_SERVICE}-http"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${SUBVERSION_SERVICE}"
    annotations:
      description: Route for Subversion http service.
      openshift.io/host.generated: 'true'
  spec:
    to:
      kind: Service
      name: "${SUBVERSION_SERVICE}"
      weigth: 100
    port:
      targetPort: 80-tcp
    wildcardPolicy: None
#Subversion存储
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    creationTimestamp: null
    labels:
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${SUBVERSION_SERVICE}"
      template: "${TEMPLATE}"
    name: "${NAMESPACE}-${SUBVERSION_SERVICE}-pv"
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 20Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: "${SUBVERSION_SERVICE}-data"
      namespace: "${NAMESPACE}"
    hostPath:
      path: "/var/lib/docker/data/${SUBVERSION_SERVICE}-storage/${NAMESPACE}/"
    persistentVolumeReclaimPolicy: Recycle
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${SUBVERSION_SERVICE}"
      template: "${TEMPLATE}"
    name: "${SUBVERSION_SERVICE}-data"
    namespace: "${NAMESPACE}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
    volumeName: "${NAMESPACE}-${SUBVERSION_SERVICE}-pv"
#Subversion的部署配置
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${SUBVERSION_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${SUBVERSION_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: The DeploymentConfig for Subversion
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: "${TIME_OUT}"
      resources: {}
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - "${SUBVERSION_SERVICE}"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_NAMESPACE}"
          name: subversion:latest
        lastTriggeredImage: ''
    replicas: 1
    test: false
    selector:
      app: "${SUBVERSION_SERVICE}"
      deploymentconfig: "${SUBVERSION_SERVICE}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: "${SUBVERSION_SERVICE}"
          deploymentconfig: "${SUBVERSION_SERVICE}"
      spec:
        volumes:
          - name: "${SUBVERSION_SERVICE}-data-1"
            persistentVolumeClaim:
              claimName: "${SUBVERSION_SERVICE}-data-1"
          - name: "${SUBVERSION_SERVICE}-data-2"
            persistentVolumeClaim:
              claimName: "${SUBVERSION_SERVICE}-data-2"
          - name: "${SUBVERSION_SERVICE}-data-3"
            persistentVolumeClaim:
              claimName: "${SUBVERSION_SERVICE}-data-3"
          - name: "${SUBVERSION_SERVICE}-data-4"
            persistentVolumeClaim:
              claimName: "${SUBVERSION_SERVICE}-data-4"
        containers:
          - name: "${SUBVERSION_SERVICE}"
            image: ' '
            ports:
              - containerPort: 80
                protocol: TCP
              - containerPort: 443
                protocol: TCP
            env:
              - name: CONTEXT_PATH
                value: /
              - name: TZ
                value: "${SERVER_TIMEZONE}"
            resources: {}
            volumeMounts:
              - name: "${SUBVERSION_SERVICE}-data-1"
                mountPath: /etc/apache/dav_svn
              - name: "${SUBVERSION_SERVICE}-data-2"
                mountPath: /var/local/svn
              - name: "${SUBVERSION_SERVICE}-data-3"
                mountPath: /var/svn-backup
              - name: "${SUBVERSION_SERVICE}-data-4"
                mountPath: /etc/apache2
            livenessProbe:
              httpGet:
                path: /
                port: 80
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 5
            readinessProbe:
              httpGet:
                path: /
                port: 80
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 5
            terminationMessagePath: "${LOG_MESSAGE}"
            imagePullPolicy: IfNotPresent
            securityContext:
              capabilities: {}
              privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: "${DEFAULT_NAME}"
        serviceAccount: "${DEFAULT_NAME}"
        securityContext: {}
  status: {}
#Subversion的服务
- apiVersion: v1
  kind: Service
  metadata:
    name: "${SUBVERSION_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${SUBVERSION_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: the Service for Subversion
  spec:
    ports:
      - name: "${SUBVERSION_SERVICE}-80-tcp"
        protocol: TCP
        port: 80
        targetPort: 80
      - name: 443-tcp
        protocol: TCP
        port: 443
        targetPort: 443
    selector:
      app: "${SUBVERSION_SERVICE}"
      deploymentconfig: "${SUBVERSION_SERVICE}"
    clusterIP: 172.30.100.17
    type: ClusterIP
    sessionAffinity: None
