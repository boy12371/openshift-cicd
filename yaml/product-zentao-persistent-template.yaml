#部署zentao模板
kind: Template
apiVersion: v1
metadata:
  name: zentao-persistent
  creationTimestamp: null
  annotations:
    openshift.io/display-name: Zentao App (Persistent)
    description: |-
      All resource for zentao, with persistent storage.
    iconClass: icon-php
    tags: zentao
labels:
  template: product-zentao-persistent
  group: product
message: Simple deploy Zentao App
#参数
parameters:
#当前项目名称
- name: NAMESPACE
  displayName: Current Project Namespace
  description: Name of the current project namespace.
  value: product
#当前模板名称
- name: TEMPLATE
  displayName: Current Template Name
  description: Name of the current template name.
  value: product-zentao-persistent
#默认服务账户名称
- name: DEFAULT_NAME
  displayName: Default ServiceAccount Name
  description: Name of the default serviceaccount.
  value: default
#Zentao容器名称
- name: ZENTAO_SERVICE
  displayName: Zentao Service Name
  description: The name of the OpenShift Service exposed for the Zentao container.
  value: zentao
#MySQL数据库容器名称
- name: MYSQL_SERVICE
  displayName: MySQL Service Name
  description: The name of the OpenShift Service exposed for the MySQL container.
  value: mysql
#Zentao数据库用户名
- name: ZENTAO_MYSQL_USER
  displayName: Zentao MySQL User Name
  description: Username for Zentao MySQL backend
  value: userQUH
#Zentao数据库密码
- name: ZENTAO_MYSQL_PASSWORD
  displayName: Zentao MySQL Password
  description: Password for Zentao MySQL backend
  value: AyqgMq2hiscHQu5E
#Zentao数据库Root密码
- name: ZENTAO_MYSQL_ROOT_PASSWORD
  displayName: Zentao MySQL Root Password
  description: Password for Zentao MySQL Root backend
  value: BttD6qMOcRunnFnd
#Zentao数据库名
- name: ZENTAO_MYSQL_DATABASE
  displayName: Zentao MySQL Datebase Name
  description: Datebase Name for Zentao MySQL backend
  value: zentaodb
- name: CAKEPHP_SECRET_TOKEN
  displayName: CakePHP secret token
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: CAKEPHP_SECURITY_SALT
  displayName: CakePHP Security Salt
  description: Security salt for session hash.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: CAKEPHP_SECURITY_CIPHER_SEED
  displayName: CakePHP Security Cipher Seed
  description: Security cipher seed for session hash.
  generate: expression
  from: "[0-9]{30}"
- name: OPCACHE_REVALIDATE_FREQ
  displayName: OPcache Revalidation Frequency
  description: |-
    How often to check script timestamps for updates, in seconds. 0 will
    result in OPcache checking for updates on every request.
  value: '2'
#日志信息存放路径
- name: LOG_MESSAGE
  displayName: Termination Message Path
  description: Maximum amount of memory the container can use.
  value: /dev/termination-log
#部署超时
- name: TIME_OUT
  displayName: timeout seconds
  description: Deployment params timeout seconds
  value: '600'
#镜像所在项目名称
- name: IMAGE_NAMESPACE
  displayName: The ImageStream Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
#CST时区
- name: SERVER_TIMEZONE
  displayName: CST Timezone
  description: China Standard Time for POD
  value: Asia/Shanghai
objects:
#创建角色绑定
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    name: "${DEFAULT_NAME}_edit"
    namespace: "${NAMESPACE}"
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: "${DEFAULT_NAME}"
    namespace: "${NAMESPACE}"
#Zentao的路由
- apiVersion: v1
  kind: Route
  metadata:
    name: "${ZENTAO_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
    annotations:
      description: Route for Zentao https service.
      openshift.io/host.generated: 'true'
  spec:
    to:
      kind: Service
      name: "${ZENTAO_SERVICE}"
      weigth: 100
    port:
      targetPort: "${ZENTAO_SERVICE}-8080-tcp"
    tls:
      termination: edge
      certificate: |
        -----BEGIN CERTIFICATE-----
        MIIEXzCCA0egAwIBAgIJALSov6ZtDG65MA0GCSqGSIb3DQEBBQUAMIGdMQswCQYD
        VQQGEwJDTjERMA8GA1UECBMIU2hhbmdoYWkxETAPBgNVBAcTCFNoYW5naGFpMRIw
        EAYDVQQKEwl6aG9uZ2xlbGUxFjAUBgNVBAsTDVpIT05HTEVMRS5DT00xJDAiBgkq
        hkiG9w0BCQEWFXN1cHBvcnRAemhvbmdsZWxlLmNvbTEWMBQGA1UEAxMNemhvbmds
        ZWxlLmNvbTAeFw0xNzA2MjQwODQzNTlaFw0xODA2MjUwODQzNTlaMIGdMQswCQYD
        VQQGEwJDTjERMA8GA1UECBMIU2hhbmdoYWkxETAPBgNVBAcTCFNoYW5naGFpMRIw
        EAYDVQQKEwl6aG9uZ2xlbGUxFjAUBgNVBAsTDVpIT05HTEVMRS5DT00xJDAiBgkq
        hkiG9w0BCQEWFXN1cHBvcnRAemhvbmdsZWxlLmNvbTEWMBQGA1UEAxMNemhvbmds
        ZWxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALcjqQ5RbVy2
        uvsDuYQS2cV0nq4R7iWpVHgb67h52AFxzlyfvRasSP0W+IbhTCVLUVb0KvsQa4Cj
        i+PadP63u5R5h3NLUPBX9ip4Jj8kXCuLVI1PmddYPbwUpBiYSxF5e7piigsTcfhs
        yauIkaYx5bxdKLbQNHtj8jTNCyKma8ETPcw/3cISJ6Nyedh9j3e6JaQbTdn0O4w3
        wsS65ZA6d+PYKdpGe/Zf1GT05TPc6Jj0baQ+Myp9f0E3eMdTTD+hvxlVvyjqVf0j
        wNvNGN5YwQI8bv/UNMjAbx1g3A82IfR3adh8GTbxRF6rg/mxFQer4mgcnx+MBWLo
        ETILo3tSebMCAwEAAaOBnzCBnDCBmQYDVR0RBIGRMIGOgg16aG9uZ2xlbGUuY29t
        ghNpcGFhcy56aG9uZ2xlbGUuY29tghVtYXN0ZXIwLnpob25nbGVsZS5jb22CDyou
        emhvbmdsZWxlLmNvbYIVKi5pcGFhcy56aG9uZ2xlbGUuY29tgh0qLm1hc3RlcjAu
        aXBhYXMuemhvbmdsZWxlLmNvbYcE0jMau4cEfwAAATANBgkqhkiG9w0BAQUFAAOC
        AQEAnkfyFTmwK1hpB+LkdlVhLLCslTeJ++69cfrTKP0wDc+0VgZj8rsWl07iDbd0
        uxRerxteoMsOKS4vzbw0YqXPxGp54d0waSXyjvfBlm9ghyMn7gvPOEqlo8uoyWOD
        ljGXbJYy/7C7tX94s9tgj2QImw1a52em4Gn0oSqxSHCidqIUxMb+ydSB0c+D8ZtS
        IaTEbD/ZQJ+k63ReLexXMICV9XwXqX2QesO6ER8+EyATLh2VVr+E/QhrPiVs+gim
        5No55t9v20/N6rZUHMfFSGvEEHW6ouQOs2BLejHVtthFdub/z5U5dgSX6j3bUjFr
        lCaI6GJQZuHWj6T70mu+aBPnXg==
        -----END CERTIFICATE-----
      key: |
        -----BEGIN PRIVATE KEY-----
        MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC3I6kOUW1ctrr7
        A7mEEtnFdJ6uEe4lqVR4G+u4edgBcc5cn70WrEj9FviG4UwlS1FW9Cr7EGuAo4vj
        2nT+t7uUeYdzS1DwV/YqeCY/JFwri1SNT5nXWD28FKQYmEsReXu6YooLE3H4bMmr
        iJGmMeW8XSi20DR7Y/I0zQsipmvBEz3MP93CEiejcnnYfY93uiWkG03Z9DuMN8LE
        uuWQOnfj2CnaRnv2X9Rk9OUz3OiY9G2kPjMqfX9BN3jHU0w/ob8ZVb8o6lX9I8Db
        zRjeWMECPG7/1DTIwG8dYNwPNiH0d2nYfBk28UReq4P5sRUHq+JoHJ8fjAVi6BEy
        C6N7UnmzAgMBAAECggEBAKQLfVMl/SAfTj2qiHKVsBv+6mRiC0AQ/WjZGbyU57fj
        iUXOkEHO8VJDUTsAdISzgpiw/g8GFkWUOapP9Jx1V8EXWw0bWdTv9cD0/s1wdF9M
        3t/1fYg3spTWqGafhB6TAxFhUuW49U3hpIPSQSTtbSvdBqs6tMgSLtK9GExhZgP7
        BFud8onbaXEMTAT5Rq4ncdNuho4CFE/PbpDyrDoSkTeyNEgo9ghTrv1l7U6fRpFr
        +9Ws+xYDUYwBHXBvsMuw5uFrKZHo4Vs4D9/NLW+4ij0yJljtAMbkiBdnPQSutN1a
        TPohy4VQcUxWHEU2KR6NfwNUy7bI0jaRc9xQTLu31oECgYEA2+rDMHZrFf6UPgHv
        cXwYZW6sYwHuyPiI6+sACtNjxVRDijrMPX63olCXeF9NOWsJMSJZR/OJdzje03W8
        6J9HnIfZ9fY2xABOgVwxP99jGflI2olJOGvtnZQscGOXxPmVn/KscWHe9Jt8DWd+
        ELmcKRcqktrkNgU3pTrO02Xi4b0CgYEA1TAcrR83NQjmD6pvXadsTd8w/AX27Kw6
        HWPgZ7HjsirP8uM9aL6k9EFY+5FQclVmVEsDefVxT+cNdU69P28VmyCUpbIq3oL3
        h0LrH2lEzWKyQZfhUsuZ4zTZ55s9i5sn76BAhmEx4+f+X+o+Qfbil0NSsFNbpciR
        DD7yZP+TqC8CgYEAsCIJbKIbSEVaY4NXS/QQ8gQ+6xkcLzfnKdRQd1sw+FVxtp86
        /zGjT8vuVMk3Z3pTpVeWXCsweR1CUehlgYY4a6Teq8Ejwb1hIvg8taRrkdz3PZhg
        3WCLsf5/zQ/m+SrQbIeHF1REpnJ1W6L889ZEvSBBx9aqmp15IMvF5Mgge50CgYEA
        la1y5MW+4BiAVk1mZU3QB5iFbtzNMfv1zX67JnLKF+RhHfoXunvnmqpqzC2JWszE
        zLfiF/WQefYSB+OhkXDvrXuhgfhmitVO7wO3ytUA/mamGtGE3LmgMNqBh1ACVQs5
        bc+InhCNk6LlgPgYf/3TtzoIS04rUWlRFVT4oJqkU/cCgYAYiNKpviwijrtG1MIc
        vdgNRmWCtt3xv4xhHCVP+YdxGHUw7cv9aTKOO/YMDbG7t4JpQWyeiNUrqXv/KeBD
        lzzsniSTE26BEiGGvYLr24InLtbRBPQN1efP+EuZBQ98bdLRrQ/VNsRDdBkWU17F
        smNvERvfJoBRq0JkyEZS/sEUvw==
        -----END PRIVATE KEY-----
      insecureEdgeTerminationPolicy: Redirect
- apiVersion: v1
  kind: Route
  metadata:
    name: "${ZENTAO_SERVICE}-http"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
    annotations:
      description: Route for Zentao http service.
      openshift.io/host.generated: 'true'
  spec:
    to:
      kind: Service
      name: "${ZENTAO_SERVICE}"
      weigth: 100
    port:
      targetPort: "${ZENTAO_SERVICE}-8080-tcp"
    wildcardPolicy: None
#Zentao数据库存储
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}"
    name: "${NAMESPACE}-${ZENTAO_SERVICE}-${MYSQL_SERVICE}-pv"
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 5Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}-data"
      namespace: "${NAMESPACE}"
    hostPath:
      path: "/mnt/data/${NAMESPACE}-storage/${ZENTAO_SERVICE}-${MYSQL_SERVICE}/"
    persistentVolumeReclaimPolicy: Recycle
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}"
    name: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}-data"
    namespace: "${NAMESPACE}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    volumeName: "${NAMESPACE}-${ZENTAO_SERVICE}-${MYSQL_SERVICE}-pv"
#Zentao存储
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${ZENTAO_SERVICE}"
      template: "${TEMPLATE}"
    name: "${NAMESPACE}-${ZENTAO_SERVICE}-pv"
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 5Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: "${ZENTAO_SERVICE}-data"
      namespace: "${NAMESPACE}"
    hostPath:
      path: "/mnt/data/${NAMESPACE}-storage/${ZENTAO_SERVICE}/"
    persistentVolumeReclaimPolicy: Recycle
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      project: "${NAMESPACE}"
      provider: "${ZENTAO_SERVICE}"
      template: "${TEMPLATE}"
    name: "${ZENTAO_SERVICE}-data"
    namespace: "${NAMESPACE}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    volumeName: "${NAMESPACE}-${ZENTAO_SERVICE}-pv"
#Zentao的mysql数据库部署配置
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      deploymentconfig: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: The DeploymentConfig for Zentao MySQL
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: "${TIME_OUT}"
      resources: {}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - "${MYSQL_SERVICE}"
          from:
            kind: ImageStreamTag
            namespace: "${IMAGE_NAMESPACE}"
            name: mysql-57-centos7:latest
          lastTriggeredImage: ''
    replicas: 1
    test: false
    selector:
      app: "${ZENTAO_SERVICE}"
      deploymentconfig: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: "${ZENTAO_SERVICE}"
          deploymentconfig: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}"
      spec:
        volumes:
          - name: "${MYSQL_SERVICE}-data"
            persistentVolumeClaim:
              claimName: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}-data"
        containers:
          - name: "${MYSQL_SERVICE}"
            image: ' '
            ports:
              - containerPort: 3306
                protocol: TCP
            env:
              - name: MYSQL_USER
                value: "${ZENTAO_MYSQL_USER}"
              - name: MYSQL_PASSWORD
                value: "${ZENTAO_MYSQL_PASSWORD}"
              - name: MYSQL_ROOT_PASSWORD
                value: "${ZENTAO_MYSQL_ROOT_PASSWORD}"
              - name: MYSQL_DATABASE
                value: "${ZENTAO_MYSQL_DATABASE}"
              - name: TZ
                value: "${SERVER_TIMEZONE}"
            resources: {}
            volumeMounts:
              - name: "${MYSQL_SERVICE}-data"
                mountPath: /var/lib/mysql/data
            livenessProbe:
              tcpSocket:
                port: 3306
              initialDelaySeconds: 30
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER
                    -D $MYSQL_DATABASE -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: "${LOG_MESSAGE}"
            imagePullPolicy: Always
            securityContext:
              capabilities: {}
              privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: "${DEFAULT_NAME}"
        serviceAccount: "${DEFAULT_NAME}"
        securityContext: {}
  status: {}
#Zentao的部署配置
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${ZENTAO_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: The DeploymentConfig for Zentao
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: "${TIME_OUT}"
      resources: {}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - "${ZENTAO_SERVICE}"
          from:
            kind: ImageStreamTag
            namespace: "${NAMESPACE}"
            name: "${ZENTAO_SERVICE}:latest"
          lastTriggeredImage: ''
    replicas: 1
    test: false
    selector:
      app: "${ZENTAO_SERVICE}"
      deploymentconfig: "${ZENTAO_SERVICE}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: "${ZENTAO_SERVICE}"
          deploymentconfig: "${ZENTAO_SERVICE}"
      spec:
        volumes:
          - name: "${ZENTAO_SERVICE}-data"
            persistentVolumeClaim:
              claimName: "${ZENTAO_SERVICE}-data"
        containers:
          - name: "${ZENTAO_SERVICE}"
            image: ' '
            ports:
              - containerPort: 8080
                protocol: TCP
            env:
              - name: DATABASE_SERVICE_NAME
                value: "${DATABASE_SERVICE_NAME}"
              - name: DATABASE_ENGINE
                value: "${MYSQL_SERVICE}"
              - name: DATABASE_NAME
                value: "${ZENTAO_MYSQL_DATABASE}"
              - name: DATABASE_USER
                valueFrom:
                  secretKeyRef:
                    name: "${ZENTAO_SERVICE}"
                    key: database-user
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "${ZENTAO_SERVICE}"
                    key: database-password
              - name: CAKEPHP_SECRET_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: "${ZENTAO_SERVICE}"
                    key: cakephp-secret-token
              - name: CAKEPHP_SECURITY_SALT
                valueFrom:
                  secretKeyRef:
                    name: "${ZENTAO_SERVICE}"
                    key: cakephp-security-salt
              - name: CAKEPHP_SECURITY_CIPHER_SEED
                valueFrom:
                  secretKeyRef:
                    name: "${ZENTAO_SERVICE}"
                    key: cakephp-security-cipher-seed
              - name: OPCACHE_REVALIDATE_FREQ
                value: "${OPCACHE_REVALIDATE_FREQ}"
              - name: TZ
                value: "${SERVER_TIMEZONE}"
            resources: {}
            volumeMounts:
              - name: "${ZENTAO_SERVICE}-data"
                mountPath: /opt/app-root/src
            livenessProbe:
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 5
            readinessProbe:
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 5
            terminationMessagePath: "${LOG_MESSAGE}"
            imagePullPolicy: Always
            securityContext:
              capabilities: {}
              privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: "${DEFAULT_NAME}"
        serviceAccount: "${DEFAULT_NAME}"
        securityContext: {}
  status: {}
#Zentao的mysql数据库服务
- apiVersion: v1
  kind: Service
  metadata:
    name: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: the Service for Zentao MySQL
  spec:
    ports:
      - name: "${MYSQL_SERVICE}-3306-tcp"
        protocol: TCP
        port: 3306
        targetPort: 3306
    selector:
      app: "${ZENTAO_SERVICE}"
      deploymentconfig: "${ZENTAO_SERVICE}-${MYSQL_SERVICE}"
    clusterIP: 172.30.103.11
    type: ClusterIP
    sessionAffinity: None
#Zentao的服务
- apiVersion: v1
  kind: Service
  metadata:
    name: "${ZENTAO_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: the Service for Zentao
      service.alpha.openshift.io/dependencies: '[{"name": "${ZENTAO_SERVICE}-${MYSQL_SERVICE}", "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: 'true'
  spec:
    ports:
      - name: "${ZENTAO_SERVICE}-8080-tcp"
        protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      app: "${ZENTAO_SERVICE}"
      deploymentconfig: "${ZENTAO_SERVICE}"
    clusterIP: 172.30.103.10
    type: ClusterIP
    sessionAffinity: None
#Zentao口令
- apiVersion: v1
  kind: Secret
  metadata:
    name: "${ZENTAO_SERVICE}"
    labels:
      app: "${ZENTAO_SERVICE}"
  stringData:
    database-user: "${ZENTAO_MYSQL_USER}"
    database-password: "${ZENTAO_MYSQL_PASSWORD}"
    cakephp-secret-token: "${CAKEPHP_SECRET_TOKEN}"
    cakephp-security-salt: "${CAKEPHP_SECURITY_SALT}"
    cakephp-security-cipher-seed: "${CAKEPHP_SECURITY_CIPHER_SEED}"
#Zentao编译后镜像
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: "${ZENTAO_SERVICE}"
    namespace: "${NAMESPACE}"
    labels:
      app: "${ZENTAO_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: Keeps track of changes in the application image
#Zentao编译配置
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: "${ZENTAO_SERVICE}"
    namespace: "${NAMESPACE}"
    labels:
      app: "${ZENTAO_SERVICE}"
    annotations:
      description: Defines how to build the application
  spec:
    triggers:
      - type: ImageChange
        imageChange: ''
    source:
      type: Git
      git:
        uri: https://github.com/boy12371/zentaopms.git
        ref: "master"
      contextDir: "/"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_NAMESPACE}"
          name: php-70-centos7:latest
    output:
      to:
        kind: ImageStreamTag
        name: "${ZENTAO_SERVICE}:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
    resources: {}
    postCommit: {}
