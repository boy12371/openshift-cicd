#部署default-registry模板
kind: Template
apiVersion: v1
metadata:
  name: default-registry-persistent
  creationTimestamp: null
  annotations:
    openshift.io/display-name: Docker Registry App (Persistent)
    description: |-
      All resource for docker registry, with persistent storage.
    iconClass: icon-jenkins
    tags: docker, registry
labels:
  template: default-registry-persistent-template
  group: default
message: Simple deploy Docker Registry App
#参数
parameters:
#当前项目名称
- name: NAMESPACE
  displayName: Current Project Namespace
  description: Name of the current project namespace.
  value: default
#当前模板名称
- name: TEMPLATE
  displayName: Current Template Name
  description: Name of the current template name.
  value: default-registry-persistent-template
#默认服务账户名称
- name: DEFAULT_NAME
  displayName: Default ServiceAccount Name
  description: Name of the default serviceaccount.
  value: registry
#Registry容器名称
- name: REGISTRY_SERVICE
  displayName: Registry Service Name
  description: The name of the OpenShift Service exposed for the Registry container.
  value: registry
objects:
#创建服务账户
- apiVersion: v1
  kind: ServiceAccount
  groupNames: "${NAMESPACE}"
  metadata:
    creationTimestamp: null
    name: registry
    namespace: "${NAMESPACE}"
#创建集群角色绑定
- apiVersion: v1
  groupNames: null
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: null
    name: registry-registry-role
  roleRef:
    name: system:registry
  subjects:
  - kind: ServiceAccount
    name: registry
    namespace: "${NAMESPACE}"
#Registry存储
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    creationTimestamp: null
    labels:
      project: default
      provider: docker-registry
    name: default-registry-pv
  spec:
    accessModes:
    - ReadWriteMany
    capacity:
      storage: 100Gi
    claimRef:
      kind: PersistentVolumeClaim
      name: default-registry-data
      namespace: default
    hostPath:
      path: /mnt/data/openshift-storage/origin-docker-registry
    persistentVolumeReclaimPolicy: Recycle
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      project: default
      provider: docker-registry
    name: default-registry-data
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 100Gi
    volumeName: default-registry-pv
#Registry的部署配置
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: 2017-06-11T14:46:35Z
    generation: 4
    labels:
      docker-registry: default
    name: docker-registry
    namespace: default
    resourceVersion: "1426"
    selfLink: /oapi/v1/namespaces/default/deploymentconfigs/docker-registry
    uid: c4bb6c60-4eb4-11e7-868e-1866daeed150
  spec:
    replicas: 1
    selector:
      docker-registry: default
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          docker-registry: default
      spec:
        containers:
        - env:
          - name: REGISTRY_HTTP_ADDR
            value: :5000
          - name: REGISTRY_HTTP_NET
            value: tcp
          - name: REGISTRY_HTTP_SECRET
            value: GHbnNYKcb1jdD+ZY6+9YCfouEaC9YUZLJG4vM1qkb4M=
          - name: REGISTRY_MIDDLEWARE_REPOSITORY_OPENSHIFT_ENFORCEQUOTA
            value: "false"
          image: openshift/origin-docker-registry:v1.4.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: registry
          ports:
          - containerPort: 5000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /registry
            name: registry-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: registry
        serviceAccountName: registry
        terminationGracePeriodSeconds: 30
        volumes:
        - name: registry-storage
          persistentVolumeClaim:
            claimName: default-registry-data
    test: false
    triggers:
    - type: ConfigChange
  status: {}
#Jenkins服务
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2017-06-11T14:46:35Z
    labels:
      docker-registry: default
    name: docker-registry
    namespace: default
    resourceVersion: "1236"
    selfLink: /api/v1/namespaces/default/services/docker-registry
    uid: c4bc7301-4eb4-11e7-868e-1866daeed150
  spec:
    clusterIP: 172.30.88.118
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      docker-registry: default
    sessionAffinity: ClientIP
    type: ClusterIP
