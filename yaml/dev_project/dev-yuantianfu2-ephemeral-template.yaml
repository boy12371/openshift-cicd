#部署yuantianfu2模板
kind: Template
apiVersion: v1
metadata:
  name: yuantianfu2-ephemeral
  creationTimestamp: null
  annotations:
    openshift.io/display-name: Yuantianfu2 App (Ephemeral)
    description: |-
      All resource for yuantianfu2, with ephemeral storage.
    iconClass: icon-jenkins
    tags: yuantianfu2
labels:
  template: dev-yuantianfu2-ephemeral-template
  group: dev
message: Simple deploy Yuantianfu2 App
#参数
parameters:
#当前项目名称
- name: NAMESPACE
  displayName: Current Project Namespace
  description: Name of the current project namespace.
  value: dev
#当前模板名称
- name: TEMPLATE
  displayName: Current Template Name
  description: Name of the current template name.
  value: dev-yuantianfu2-ephemeral-template
#默认服务账户名称
- name: DEFAULT_NAME
  displayName: Default ServiceAccount Name
  description: Name of the default serviceaccount.
  value: default
#Yuantianfu2容器名称
- name: YUANTIANFU_SERVICE
  displayName: Yuantianfu2 Service Name
  description: The name of the OpenShift Service exposed for the Yuantianfu2 container.
  value: yuantianfu2
#日志信息存放路径
- name: LOG_MESSAGE
  displayName: Termination Message Path
  description: Maximum amount of memory the container can use.
  value: /dev/termination-log
#部署超时
- name: TIME_OUT
  displayName: timeout seconds
  description: Deployment params timeout seconds
  value: '600'
#镜像所在项目名称
- name: IMAGE_NAMESPACE
  displayName: The ImageStream Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
#CST时区
- name: SERVER_TIMEZONE
  displayName: CST Timezone
  description: China Standard Time for POD
  value: Asia/Shanghai
objects:
#Yuantianfu2的路由
- apiVersion: v1
  kind: Route
  metadata:
    name: "${YUANTIANFU_SERVICE}-http"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${YUANTIANFU_SERVICE}"
    annotations:
      description: Route for Yuantianfu2 http service.
      openshift.io/host.generated: 'true'
  spec:
    host: yuantianfu-http-dev.ipaas.zhonglele.com
    to:
      kind: Service
      name: "${NAMESPACE}-${YUANTIANFU_SERVICE}"
      weigth: 100
    port:
      targetPort: "${YUANTIANFU_SERVICE}-8080-tcp"
    wildcardPolicy: None
#Yuantianfu2的部署配置
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${YUANTIANFU_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${YUANTIANFU_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: The DeploymentConfig for Yuantianfu2
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: "${TIME_OUT}"
      resources: {}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - "${YUANTIANFU_SERVICE}"
          from:
            kind: ImageStreamTag
            namespace: "${NAMESPACE}"
            name: "${YUANTIANFU_SERVICE}:latest"
          lastTriggeredImage: ''
    replicas: 1
    test: false
    selector:
      app: "${YUANTIANFU_SERVICE}"
      deploymentconfig: "${YUANTIANFU_SERVICE}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: "${YUANTIANFU_SERVICE}"
          deploymentconfig: "${YUANTIANFU_SERVICE}"
      spec:
        containers:
          - name: "${YUANTIANFU_SERVICE}"
            image: ' '
            ports:
              - containerPort: 8080
                protocol: TCP
            env:
              - name: TZ
                value: "${SERVER_TIMEZONE}"
            resources: {}
            livenessProbe:
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 5
            readinessProbe:
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 5
            terminationMessagePath: "${LOG_MESSAGE}"
            imagePullPolicy: Always
            securityContext:
              capabilities: {}
              privileged: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: "${DEFAULT_NAME}"
        serviceAccount: "${DEFAULT_NAME}"
        securityContext: {}
  status: {}
#Yuantianfu2的服务
- apiVersion: v1
  kind: Service
  metadata:
    name: "${NAMESPACE}-${YUANTIANFU_SERVICE}"
    namespace: "${NAMESPACE}"
    creationTimestamp: null
    labels:
      app: "${YUANTIANFU_SERVICE}"
      group: "${NAMESPACE}"
      template: "${TEMPLATE}"
    annotations:
      description: the Service for Yuantianfu2
  spec:
    ports:
      - name: "${YUANTIANFU_SERVICE}-8080-tcp"
        protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      app: "${YUANTIANFU_SERVICE}"
      deploymentconfig: "${YUANTIANFU_SERVICE}"
    clusterIP: 172.30.101.15
    type: ClusterIP
    sessionAffinity: None
